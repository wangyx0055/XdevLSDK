cmake_minimum_required(VERSION 2.8)

project(XdevLBT)

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY  ${XDEVL_TOOLS}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${XDEVL_TOOLS}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${XDEVL_TOOLS}/bin)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY  ${XDEVL_TOOLS}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG  ${XDEVL_TOOLS}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE  ${XDEVL_TOOLS}/bin)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY  ${XDEVL_TOOLS}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG  ${XDEVL_TOOLS}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${XDEVL_TOOLS}/bin)

set(CMAKE_DEBUG_POSTFIX d)

include_directories(
	${XDEVL_HOME}/include
	${XDEVL_PLUGINS}
)

link_directories(
	${XDEVL_HOME}/lib
	${XDEVL_EXTERNALS}/lib
)

if(PLATFORM_MACOSX)
	set( CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -F${XDEVL_EXTERNALS}/lib" )
endif()



set(LIBS XdevL)

if(PLATFORM_MACOSX)
	set(LIBS ${LIBS} dl)
elseif(PLATFORM_LINUX)
	set(LIBS ${LIBS} dl)
elseif(PLATFORM_WINDOWS)

endif()

add_executable(${PROJECT_NAME} XdevLBT.cpp)

target_link_libraries(${PROJECT_NAME} ${LIBS})
