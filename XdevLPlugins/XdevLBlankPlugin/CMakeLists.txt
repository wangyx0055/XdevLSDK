cmake_minimum_required(VERSION 2.8)

project(XdevLBlank)

#
# Set the names for the stuff we are going to create

set(XdevLBlankLibrary XdevLBlank)


#
# Set the Plugin version
#

set(XDEVLBLANK_MAJOR_VERSION 1)
set(XDEVLBLANK_MINOR_VERSION 0)
set(XDEVLBLANK_PATCH_VERSION 0)
set(XDEVLBLANK_VERSION "${XDEVLBLANK_MAJOR_VERSION}.${XDEVLBLANK_MINOR_VERSION}.${XDEVLBLANK_PATCH_VERSION}")

add_definitions(
	-DXDEVLBLANK_MAJOR_VERSION=${XDEVLBLANK_MAJOR_VERSION}
	-DXDEVLBLANK_MINOR_VERSION=${XDEVLBLANK_MINOR_VERSION} 
	-DXDEVLBLANK_PATCH_VERSION=${XDEVLBLANK_PATCH_VERSION}
)

#
# Set the AL Module version
#

set(XDEVLBLANK_MODULE_MAJOR_VERSION 0)
set(XDEVLBLANK_MODULE_MINOR_VERSION 2)
set(XDEVLBLANK_MODULE_PATCH_VERSION 0)
set(XDEVLBLANK_MODULE_VERSION "${XDEVLBLANK_MODULE_MAJOR_VERSION}.${XDEVLBLANK_MODULE_MINOR_VERSION}.${XDEVLBLANK_MODULE_PATCH_VERSION}")

add_definitions(
	-DXDEVLBLANK_MODULE_MAJOR_VERSION=${XDEVLBLANK_MODULE_MAJOR_VERSION}
	-DXDEVLBLANK_MODULE_MINOR_VERSION=${XDEVLBLANK_MODULE_MINOR_VERSION} 
	-DXDEVLBLANK_MODULE_PATCH_VERSION=${XDEVLBLANK_MODULE_PATCH_VERSION}
)


#
# Set variable names for the library

set(HEADERS_DIR ${XdevLBlank_SOURCE_DIR})
set(SRC_DIR ${XdevLBlank_SOURCE_DIR})

#
# Set the output directories

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

#
# Set header files for the library.

set(HEADER_INTERFACE_FILE ${HEADERS_DIR}/XdevLBlank.h)

set(HEADER_FILES
	${HEADER_INTERFACE_FILE}
	${HEADERS_DIR}/XdevLBlankImpl.h
)

#
# Set the source files for the library.

set(SOURCE_FILES
	${SRC_DIR}/XdevLBlankImpl.cpp
)

if(NOT XDEVL_BUILD_STATIC)
	set(SOURCE_FILES ${SOURCE_FILES} ${SRC_DIR}/XdevLBlankImplPlugin.cpp)
endif()

#
# Add external libraries folder

link_directories(
	${XdevL_BINARY_DIR}/lib
)
	
#
# Create the library

add_library(${XdevLBlankLibrary} SHARED
    ${HEADER_FILES}
    ${SOURCE_FILES}
)

#
# Add include directories
#
include_directories( 
	.
	${XDEVL_HOME}/include
	${XDEVL_PLUGINS}
)

#
# Add external ibraries

target_link_libraries( ${XdevLBlankLibrary} XdevL )

#
# Change the outputname of the library
set_property(TARGET ${XdevLBlankLibrary} PROPERTY PREFIX "${XDEVL_SHARED_LIBRARY_FILE_PREFIX}")

if(CMAKE_BUILD_TYPE MATCHES Debug)
	set_property(TARGET ${XdevLBlankLibrary} PROPERTY SUFFIX "-${XDEVLBLANK_VERSION}d${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
else()
	set_property(TARGET ${XdevLBlankLibrary} PROPERTY SUFFIX "-${XDEVLBLANK_VERSION}${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
endif()


install(FILES ${HEADER_INTERFACE_FILE} DESTINATION "${XDEVL_PLUGINS_INCLUDE_INSTALL_PATH}/${PROJECT_NAME}")
install(TARGETS ${XdevLBlankLibrary} DESTINATION ${XDEVL_PLUGINS_INSTALL_PATH})
