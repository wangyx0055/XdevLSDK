cmake_minimum_required(VERSION 2.8)

project(XdevLAudioAlsa)

set(XdevLAudioAlsaLibrary XdevLAudioAlsa)

set(HEADERS_DIR ${XDEVL_PLUGINS}/XdevLAudio)
set(SRC_DIR ${XDEVL_PLUGINS}/XdevLAudio)

set(XDEVLAUDIOALSA_PLUGIN_MAJOR_VERSION 0)
set(XDEVLAUDIOALSA_PLUGIN_MINOR_VERSION 1)
set(XDEVLAUDIOALSA_PLUGIN_PATCH_VERSION 0)
set(XDEVLAUDIOALSA_PLUGIN_VERSION "${XDEVLAUDIOALSA_PLUGIN_MAJOR_VERSION}.${XDEVLAUDIOALSA_PLUGIN_MINOR_VERSION}.${XDEVLAUDIOALSA_PLUGIN_PATCH_VERSION}")

add_definitions(
	-DXDEVLAUDIOALSA_PLUGIN_MAJOR_VERSION=${XDEVLAUDIOALSA_PLUGIN_MAJOR_VERSION}
	-DXDEVLAUDIOALSA_PLUGIN_MINOR_VERSION=${XDEVLAUDIOALSA_PLUGIN_MINOR_VERSION}
	-DXDEVLAUDIOALSA_PLUGIN_PATCH_VERSION=${XDEVLAUDIOALSA_PLUGIN_PATCH_VERSION}
)

set(XDEVLAUDIOALSA_MODULE_MAJOR_VERSION 0)
set(XDEVLAUDIOALSA_MODULE_MINOR_VERSION 1)
set(XDEVLAUDIOALSA_MODULE_PATCH_VERSION 0)
set(XDEVLAUDIOALSA_MODULE_VERSION "${XDEVLAUDIOALSA_MODULE_MAJOR_VERSION}.${XDEVLAUDIOALSA_MODULE_MINOR_VERSION}.${XDEVLAUDIOALSA_MODULE_PATCH_VERSION}")

add_definitions(
	-DXDEVLAUDIOALSA_MODULE_MAJOR_VERSION=${XDEVLAUDIOALSA_MODULE_MAJOR_VERSION}
	-DXDEVLAUDIOALSA_MODULE_MINOR_VERSION=${XDEVLAUDIOALSA_MODULE_MINOR_VERSION}
	-DXDEVLAUDIOALSA_MODULE_PATCH_VERSION=${XDEVLAUDIOALSA_MODULE_PATCH_VERSION}
)

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY  ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY  ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG  ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE  ${XDEVL_PLUGINS}/lib)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY  ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG  ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

set(HEADER_INTERFACE_FILE ${HEADERS_DIR}/XdevLAudio.h)

set(HEADER_FILES
	${HEADER_INTERFACE_FILE}
	${HEADERS_DIR}/XdevLAudioAlsa/XdevLAudioAlsaImpl.h
)

set(SOURCE_FILES
	${SRC_DIR}/XdevLAudioAlsa/XdevLAudioAlsaImpl.cpp
)

include_directories(
	${XDEVL_HOME}/include
	${XDEVL_PLUGINS}
	${ALSA_INCLUDE_DIR}
)

link_directories(
	${XDEVL_HOME}/lib
	${XDEVL_EXTERNALS}/lib
)
if(PLATFORM_MACOSX)
	set( CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} -F${XDEVL_EXTERNALS}/lib")
endif()

if(CMAKE_BUILD_TYPE MATCHES Debug)
	set(LIBS XdevLd ${ALSA_LIBRARY})
else()
	set(LIBS XdevL ${ALSA_LIBRARY})
endif()

add_library(${XdevLAudioAlsaLibrary} SHARED
    ${HEADER_FILES}
    ${SOURCE_FILES}
)

target_link_libraries(${XdevLAudioAlsaLibrary} ${LIBS})

#
# Change the outputname of the library

set_property(TARGET ${XdevLAudioAlsaLibrary} PROPERTY PREFIX "${XDEVL_SHARED_LIBRARY_FILE_PREFIX}")

if(CMAKE_BUILD_TYPE MATCHES Debug)
	set_property(TARGET ${XdevLAudioAlsaLibrary} PROPERTY SUFFIX "-${XDEVLAUDIOALSA_PLUGIN_VERSION}d${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
else()
	set_property(TARGET ${XdevLAudioAlsaLibrary} PROPERTY SUFFIX "-${XDEVLAUDIOALSA_PLUGIN_VERSION}${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
endif()

install(FILES ${HEADER_INTERFACE_FILE} DESTINATION "${XDEVL_PLUGINS_INCLUDE_INSTALL_PATH}/${PROJECT_NAME}")
install(TARGETS ${XdevLAudioAlsaLibrary} DESTINATION ${XDEVL_PLUGINS_INSTALL_PATH})

