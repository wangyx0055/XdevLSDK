cmake_minimum_required(VERSION 2.8)

project(XdevLJoystick)

#
# Set the names for the stuff we are going to create

set(XdevLJoystickLibrary XdevLJoystick)

#
# Set the Plugin version
#

set(XDEVLJOYSTICK_MAJOR_VERSION 1)
set(XDEVLJOYSTICK_MINOR_VERSION 0)
set(XDEVLJOYSTICK_PATCH_VERSION 0)
set(XDEVLJOYSTICK_VERSION "${XDEVLJOYSTICK_MAJOR_VERSION}.${XDEVLJOYSTICK_MINOR_VERSION}.${XDEVLJOYSTICK_PATCH_VERSION}")

add_definitions(
	-DXDEVLJOYSTICK_MAJOR_VERSION=${XDEVLJOYSTICK_MAJOR_VERSION}
	-DXDEVLJOYSTICK_MINOR_VERSION=${XDEVLJOYSTICK_MINOR_VERSION} 
	-DXDEVLJOYSTICK_PATCH_VERSION=${XDEVLJOYSTICK_PATCH_VERSION}
)

#
# Set the Module version
#

set(XDEVLJOYSTICK_MODULE_MAJOR_VERSION 0)
set(XDEVLJOYSTICK_MODULE_MINOR_VERSION 2)
set(XDEVLJOYSTICK_MODULE_PATCH_VERSION 0)
set(XDEVLJOYSTICK_MODULE_VERSION "${XDEVLJOYSTICK_MODULE_MAJOR_VERSION}.${XDEVLJOYSTICK_MODULE_MINOR_VERSION}.${XDEVLJOYSTICK_MODULE_PATCH_VERSION}")

add_definitions(
	-DXDEVLJOYSTICK_MODULE_MAJOR_VERSION=${XDEVLJOYSTICK_MODULE_MAJOR_VERSION}
	-DXDEVLJOYSTICK_MODULE_MINOR_VERSION=${XDEVLJOYSTICK_MODULE_MINOR_VERSION} 
	-DXDEVLJOYSTICK_MODULE_PATCH_VERSION=${XDEVLJOYSTICK_MODULE_PATCH_VERSION}
)

#
# Set variable names for the library

set(HEADERS_DIR .)
set(SRC_DIR .)

#
# Set the output directories

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE .${XDEVL_PLUGINS}/lib)

#
# Set header files for the library.

set(HEADER_INTERFACE_FILE ${HEADERS_DIR}/XdevLJoystick.h)

set(HEADER_FILES
	${HEADER_INTERFACE_FILE}
	${HEADERS_DIR}/XdevLJoystickImpl.h
)

#
# Set the source files for the library.

set(SOURCE_FILES
	${SRC_DIR}/XdevLJoystickImpl.cpp
)

#
# Add external libraries folder

link_directories(
	${XdevL_BINARY_DIR}/lib
)

#
# Create the library

add_library(${XdevLJoystickLibrary} SHARED
		${HEADER_FILES}
		${SOURCE_FILES}
)

#
# Add include directories
#
include_directories(
	.
	${XDEVL_HOME}/include
	${XDEVL_PLUGINS}
)

if(CMAKE_BUILD_TYPE MATCHES Debug)
	target_link_libraries(
		${XdevLJoystickLibrary}
		XdevLd
	)
else()
	target_link_libraries(
		${XdevLJoystickLibrary}
		XdevL
	)
endif()


#
# Change the outputname of the library

set_property(TARGET ${XdevLJoystickLibrary} PROPERTY PREFIX "${XDEVL_SHARED_LIBRARY_FILE_PREFIX}")

if(CMAKE_BUILD_TYPE MATCHES Debug)
	set_property(TARGET ${XdevLJoystickLibrary} PROPERTY SUFFIX "-${XDEVLJOYSTICK_VERSION}d${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
else()
	set_property(TARGET ${XdevLJoystickLibrary} PROPERTY SUFFIX "-${XDEVLJOYSTICK_VERSION}${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
endif()

install(FILES ${HEADER_INTERFACE_FILE} DESTINATION "${XDEVL_PLUGINS_INCLUDE_INSTALL_PATH}/XdevLInput/${PROJECT_NAME}")
install(TARGETS ${XdevLJoystickLibrary} DESTINATION ${XDEVL_PLUGINS_INSTALL_PATH})
