cmake_minimum_required(VERSION 2.8)

project(XdevLFont)

find_package(OpenAL)

#
# Set the names for the stuff we are going to create

set(XdevLFontLibrary XdevLFont)


#
# Set the Plugin version
#

set(XDEVLFONT_MAJOR_VERSION 1)
set(XDEVLFONT_MINOR_VERSION 0)
set(XDEVLFONT_PATCH_VERSION 0)
set(XDEVLFONT_VERSION "${XDEVLFONT_MAJOR_VERSION}.${XDEVLFONT_MINOR_VERSION}.${XDEVLFONT_PATCH_VERSION}")

add_definitions(
	-DXDEVLFONT_MAJOR_VERSION=${XDEVLFONT_MAJOR_VERSION}
	-DXDEVLFONT_MINOR_VERSION=${XDEVLFONT_MINOR_VERSION} 
	-DXDEVLFONT_PATCH_VERSION=${XDEVLFONT_PATCH_VERSION}
)

#
# Set the Module version
#

set(XDEVLFONTSYSTEM_MODULE_MAJOR_VERSION 0)
set(XDEVLFONTSYSTEM_MODULE_MINOR_VERSION 1)
set(XDEVLFONTSYSTEM_MODULE_PATCH_VERSION 0)
set(XDEVLFONTSYSTEM_MODULE_VERSION "${XDEVLFONTSYSTEM_MODULE_MAJOR_VERSION}.${XDEVLFONTSYSTEM_MODULE_MINOR_VERSION}.${XDEVLFONTSYSTEM_MODULE_PATCH_VERSION}")

add_definitions(
	-DXDEVLFONTSYSTEM_MODULE_MAJOR_VERSION=${XDEVLFONTSYSTEM_MODULE_MAJOR_VERSION}
	-DXDEVLFONTSYSTEM_MODULE_MINOR_VERSION=${XDEVLFONTSYSTEM_MODULE_MINOR_VERSION} 
	-DXDEVLFONTSYSTEM_MODULE_PATCH_VERSION=${XDEVLFONTSYSTEM_MODULE_PATCH_VERSION}
)

#
# Set the Module version
#

set(XDEVLTEXTLAYOUT_MODULE_MAJOR_VERSION 0)
set(XDEVLTEXTLAYOUT_MODULE_MINOR_VERSION 1)
set(XDEVLTEXTLAYOUT_MODULE_PATCH_VERSION 0)
set(XDEVLTEXTLAYOUT_MODULE_VERSION "${XDEVLTEXTLAYOUT_MODULE_MAJOR_VERSION}.${XDEVLTEXTLAYOUT_MODULE_MINOR_VERSION}.${XDEVLTEXTLAYOUT_MODULE_PATCH_VERSION}")

add_definitions(
	-DXDEVLTEXTLAYOUT_MODULE_MAJOR_VERSION=${XDEVLTEXTLAYOUT_MODULE_MAJOR_VERSION}
	-DXDEVLTEXTLAYOUT_MODULE_MINOR_VERSION=${XDEVLTEXTLAYOUT_MODULE_MINOR_VERSION} 
	-DXDEVLTEXTLAYOUT_MODULE_PATCH_VERSION=${XDEVLTEXTLAYOUT_MODULE_PATCH_VERSION}
)



#
# Set variable names for the library

set(HEADERS_DIR .)
set(SRC_DIR .)

#
# Set the output directories

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

#
# Set header files for the library.

set(HEADER_INTERFACE_FILE 
	${HEADERS_DIR}/XdevLFont.h
	${HEADERS_DIR}/XdevLFontSystem.h
	${HEADERS_DIR}/XdevLTextLayout.h
	${HEADERS_DIR}/XdevLFontImpl.h
)

set(HEADER_FILES
	${HEADER_INTERFACE_FILE}
	${HEADERS_DIR}/XdevLFontSystemImpl.h
	${HEADERS_DIR}/XdevLTextLayoutImpl.h
	${HEADERS_DIR}/lodepng.h    
)

#
# Set the source files for the library.

set(SOURCE_FILES
	${SRC_DIR}/XdevLFontImpl.cpp
	${SRC_DIR}/XdevLFontSystemImpl.cpp
	${SRC_DIR}/XdevLTextLayoutImpl.cpp
    ${SRC_DIR}/lodepng.cpp
)

#
# Add external libraries folder

link_directories(
	${XdevL_BINARY_DIR}/lib
)
	
#
# Create the library

add_library(${XdevLFontLibrary} SHARED
    ${HEADER_FILES}
    ${SOURCE_FILES}
)

#
# Add include directories
#
include_directories( 
	.
	${XDEVL_HOME}/include
	${XDEVL_PLUGINS}
)

#
# Add external ibraries

if(CMAKE_BUILD_TYPE MATCHES Debug)
	set(LIBS ${LIBS} XdevLd )
else()
	set(LIBS ${LIBS} XdevL )
endif()


target_link_libraries(${XdevLFontLibrary} ${LIBS})

#
# Change the outputname of the library

set_property(TARGET ${XdevLFontLibrary} PROPERTY PREFIX "${XDEVL_SHARED_LIBRARY_FILE_PREFIX}")

if(CMAKE_BUILD_TYPE MATCHES Debug)
	set_property(TARGET ${XdevLFontLibrary} PROPERTY SUFFIX "-${XDEVLFONT_VERSION}d${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
else()
	set_property(TARGET ${XdevLFontLibrary} PROPERTY SUFFIX "-${XDEVLFONT_VERSION}${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
endif()

install(FILES ${HEADER_INTERFACE_FILE} DESTINATION "${XDEVL_PLUGINS_INCLUDE_INSTALL_PATH}/${PROJECT_NAME}")
install(TARGETS ${XdevLFontLibrary} DESTINATION ${XDEVL_PLUGINS_INSTALL_PATH})

