cmake_minimum_required(VERSION 2.8)

project(XdevLNetwork)

#
# Set the names for the stuff we are going to create

set(XdevLNetworkLibrary XdevLNetwork)

#
# Set the Plugin version
#

set(XDEVLNETWORK_MAJOR_VERSION 1)
set(XDEVLNETWORK_MINOR_VERSION 0)
set(XDEVLNETWORK_PATCH_VERSION 0)
set(XDEVLNETWORK_VERSION "${XDEVLNETWORK_MAJOR_VERSION}.${XDEVLNETWORK_MINOR_VERSION}.${XDEVLNETWORK_PATCH_VERSION}")

add_definitions(
	-DXDEVLNETWORK_MAJOR_VERSION=${XDEVLNETWORK_MAJOR_VERSION}
	-DXDEVLNETWORK_MINOR_VERSION=${XDEVLNETWORK_MINOR_VERSION} 
	-DXDEVLNETWORK_PATCH_VERSION=${XDEVLNETWORK_PATCH_VERSION}
)

#
# Set the Module version
#

set(XDEVLNETWORK_UDP_MODULE_MAJOR_VERSION 0)
set(XDEVLNETWORK_UDP_MODULE_MINOR_VERSION 2)
set(XDEVLNETWORK_UDP_MODULE_PATCH_VERSION 0)
set(XDEVLNETWORK_UDP_MODULE_VERSION "${XDEVLNETWORK_UDP_MODULE_MAJOR_VERSION}.${XDEVLNETWORK_UDP_MODULE_MINOR_VERSION}.${XDEVLNETWORK_UDP_MODULE_PATCH_VERSION}")

add_definitions(
	-DXDEVLNETWORK_UDP_MODULE_MAJOR_VERSION=${XDEVLNETWORK_UDP_MODULE_MAJOR_VERSION}
	-DXDEVLNETWORK_UDP_MODULE_MINOR_VERSION=${XDEVLNETWORK_UDP_MODULE_MINOR_VERSION} 
	-DXDEVLNETWORK_UDP_MODULE_PATCH_VERSION=${XDEVLNETWORK_UDP_MODULE_PATCH_VERSION}
)

set(XDEVLNETWORK_UDP2_MODULE_MAJOR_VERSION 0)
set(XDEVLNETWORK_UDP2_MODULE_MINOR_VERSION 2)
set(XDEVLNETWORK_UDP2_MODULE_PATCH_VERSION 0)
set(XDEVLNETWORK_UDP2_MODULE_VERSION "${XDEVLNETWORK_UDP2_MODULE_MAJOR_VERSION}.${XDEVLNETWORK_UDP2_MODULE_MINOR_VERSION}.${XDEVLNETWORK_UDP2_MODULE_PATCH_VERSION}")

add_definitions(
	-DXDEVLNETWORK_UDP2_MODULE_MAJOR_VERSION=${XDEVLNETWORK_UDP2_MODULE_MAJOR_VERSION}
	-DXDEVLNETWORK_UDP2_MODULE_MINOR_VERSION=${XDEVLNETWORK_UDP2_MODULE_MINOR_VERSION} 
	-DXDEVLNETWORK_UDP2_MODULE_PATCH_VERSION=${XDEVLNETWORK_UDP2_MODULE_PATCH_VERSION}
)

set(XDEVLNETWORK_TCP_MODULE_MAJOR_VERSION 0)
set(XDEVLNETWORK_TCP_MODULE_MINOR_VERSION 2)
set(XDEVLNETWORK_TCP_MODULE_PATCH_VERSION 0)
set(XDEVLNETWORK_TCP_MODULE_VERSION "${XDEVLNETWORK_TCP_MODULE_MAJOR_VERSION}.${XDEVLNETWORK_TCP_MODULE_MINOR_VERSION}.${XDEVLNETWORK_TCP_MODULE_PATCH_VERSION}")

add_definitions(
	-DXDEVLNETWORK_TCP_MODULE_MAJOR_VERSION=${XDEVLNETWORK_TCP_MODULE_MAJOR_VERSION}
	-DXDEVLNETWORK_TCP_MODULE_MINOR_VERSION=${XDEVLNETWORK_TCP_MODULE_MINOR_VERSION} 
	-DXDEVLNETWORK_TCP_MODULE_PATCH_VERSION=${XDEVLNETWORK_TCP_MODULE_PATCH_VERSION}
)

#
# Set variable names for the library
#
set(HEADERS_DIR .)
set(SRC_DIR .)

#
# Set the output directories
#
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${XDEVL_PLUGINS}/lib)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE .${XDEVL_PLUGINS}/lib)

#
# Set header files for the library.

set(HEADER_INTERFACE_FILE 
	${HEADERS_DIR}/XdevLSocket.h	
)

set(HEADER_FILES
	${HEADER_INTERFACE_FILE}
	${HEADERS_DIR}/XdevLSocketImpl.h
)

#
# Set the source files for the library.

set(SOURCE_FILES
	${SRC_DIR}/XdevLSocketImpl.cpp
)
	
#
# Add external libraries folder

link_directories(${XdevL_BINARY_DIR}/lib)
	
#
# Create the library

add_library(${XdevLNetworkLibrary} SHARED
    ${HEADER_FILES}
    ${SOURCE_FILES}
)

#
# Add include directories

include_directories( 
	.
	${XDEVL_HOME}/include
	${XDEVL_PLUGINS}
)

#
# Add external ibraries
#
if(UNIX)
	if(CMAKE_BUILD_TYPE MATCHES Debug)
		target_link_libraries(${XdevLNetworkLibrary}
			XdevLd
		)
	else()
		target_link_libraries(${XdevLNetworkLibrary}
			XdevL
		)
	endif()
elseif(APPLE)
elseif(WIN32)
	if(CMAKE_BUILD_TYPE MATCHES Debug)
		target_link_libraries(${XdevLNetworkLibrary}
			XdevLd
			ws2_32
		)
	else()
		target_link_libraries(${XdevLNetworkLibrary}
			XdevL
			ws2_32
		)
	endif()
endif()

#
# Change the outputname of the library

set_property(TARGET ${XdevLNetworkLibrary} PROPERTY PREFIX "${XDEVL_SHARED_LIBRARY_FILE_PREFIX}")

if(CMAKE_BUILD_TYPE MATCHES Debug)
	set_property(TARGET ${XdevLNetworkLibrary} PROPERTY SUFFIX "-${XDEVLNETWORK_VERSION}d${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
else()
	set_property(TARGET ${XdevLNetworkLibrary} PROPERTY SUFFIX "-${XDEVLNETWORK_VERSION}${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
endif()

install(FILES ${HEADER_INTERFACE_FILE} DESTINATION "${XDEVL_PLUGINS_INCLUDE_INSTALL_PATH}/${PROJECT_NAME}")
install(TARGETS ${XdevLNetworkLibrary} DESTINATION ${XDEVL_PLUGINS_INSTALL_PATH})
