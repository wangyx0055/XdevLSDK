cmake_minimum_required(VERSION 2.8)

project(XdevLOpenGLContextGLX)

#
# Set the names for the stuff we are going to create

set(XdevLOpenGLContextGLXLibrary XdevLOpenGLContextGLX)

#
# Set the Plugin version
#

set(XDEVLOPENGLCONTEXT_MAJOR_VERSION 0)
set(XDEVLOPENGLCONTEXT_MINOR_VERSION 1)
set(XDEVLOPENGLCONTEXT_PATCH_VERSION 0)
set(XDEVLOPENGLCONTEXT_VERSION "${XDEVLOPENGLCONTEXT_MAJOR_VERSION}.${XDEVLOPENGLCONTEXT_MINOR_VERSION}.${XDEVLOPENGLCONTEXT_PATCH_VERSION}")

add_definitions(
	-DXDEVLOPENGLCONTEXT_MAJOR_VERSION=${XDEVLOPENGLCONTEXT_MAJOR_VERSION}
	-DXDEVLOPENGLCONTEXT_MINOR_VERSION=${XDEVLOPENGLCONTEXT_MINOR_VERSION} 
	-DXDEVLOPENGLCONTEXT_PATCH_VERSION=${XDEVLOPENGLCONTEXT_PATCH_VERSION}
)

#
# Set the Module version
#

set(XDEVLOPENGLCONTEXT_MODULE_MAJOR_VERSION 0)
set(XDEVLOPENGLCONTEXT_MODULE_MINOR_VERSION 1)
set(XDEVLOPENGLCONTEXT_MODULE_PATCH_VERSION 0)
set(XDEVLOPENGLCONTEXT_MODULE_VERSION "${XDEVLOPENGLCONTEXT_MODULE_MAJOR_VERSION}.${XDEVLOPENGLCONTEXT_MODULE_MINOR_VERSION}.${XDEVLOPENGLCONTEXT_MODULE_PATCH_VERSION}")

add_definitions(
	-DXDEVLOPENGLCONTEXT_MODULE_MAJOR_VERSION=${XDEVLOPENGLCONTEXT_MODULE_MAJOR_VERSION}
	-DXDEVLOPENGLCONTEXT_MODULE_MINOR_VERSION=${XDEVLOPENGLCONTEXT_MODULE_MINOR_VERSION} 
	-DXDEVLOPENGLCONTEXT_MODULE_PATCH_VERSION=${XDEVLOPENGLCONTEXT_MODULE_PATCH_VERSION}
)



#
# Set variable names for the library

set(HEADERS_DIR ${CMAKE_CURRENT_SOURCE_DIR})
set(SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR})

#
# Set the output directories

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY  ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG  ${XDEVL_PLUGINS}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE  ${XDEVL_PLUGINS}/lib)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY  ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG  ${XDEVL_PLUGINS}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE  ${XDEVL_PLUGINS}/lib)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY . ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG  ${XDEVL_PLUGINS}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE  ${XDEVL_PLUGINS}/lib)


#
# Add include directories

include_directories(
	.
	${XDEVL_HOME}/include
	${XDEVL_PLUGINS}
)


#
# Set header files for the library.

set(HEADER_INTERFACE_FILE 
	${XDEVL_PLUGINS}/XdevLOpenGLContext/XdevLOpenGLContext.h
)

set(HEADER_FILES
	${HEADER_INTERFACE_FILE}
	${XDEVL_PLUGINS}/XdevLOpenGLContext/XdevLOpenGLContextBase.h
	${HEADERS_DIR}/XdevLOpenGLContextGLX.h
)

#
# Set the source files for the library.

set(SOURCE_FILES
	${SRC_DIR}/XdevLOpenGLContextGLX.cpp
)

if(NOT XDEVL_BUILD_STATIC)
	set(SOURCE_FILES ${SOURCE_FILES} ${SRC_DIR}/XdevLOpenGLContextGLXPlugin.cpp)
endif()


#
# Add external libraries folder

link_directories(
	${XdevL_BINARY_DIR}/lib
)

#
# Create the library

add_library(${XdevLOpenGLContextGLXLibrary} SHARED
    ${HEADER_FILES}
    ${SOURCE_FILES}
)


#
# Add external ibraries

target_link_libraries( ${XdevLOpenGLContextGLXLibrary} ${XdevLCoreLibrary} ${OPENGL_gl_LIBRARY} )


#
# Change the outputname of the library

set_property(TARGET ${XdevLOpenGLContextGLXLibrary} PROPERTY PREFIX "${XDEVL_SHARED_LIBRARY_FILE_PREFIX}")

if(CMAKE_BUILD_TYPE MATCHES Debug)
	set_property(TARGET ${XdevLOpenGLContextGLXLibrary} PROPERTY SUFFIX "-${XDEVLOPENGLCONTEXT_VERSION}d${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
else()
	set_property(TARGET ${XdevLOpenGLContextGLXLibrary} PROPERTY SUFFIX "-${XDEVLOPENGLCONTEXT_VERSION}${XDEVL_SHARED_LIBRARY_FILE_EXTENSION}")
endif()

install(FILES ${HEADER_INTERFACE_FILE} DESTINATION "${XDEVL_PLUGINS_INCLUDE_INSTALL_PATH}/XdevLOpenGLContext")
install(TARGETS ${XdevLOpenGLContextGLXLibrary} DESTINATION ${XDEVL_PLUGINS_INSTALL_PATH})
